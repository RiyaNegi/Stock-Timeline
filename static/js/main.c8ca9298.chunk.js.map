{"version":3,"sources":["ChartGraph.js","Report.js","App.js","index.js"],"names":["ChartGraph","console","log","this","props","graphData","className","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","PureComponent","Report","saveAsCsv","useJsonToCsv","fields","filename","onClick","style","padding","App","state","isloading","fetch","then","resp","json","setState","catch","err","objArray","graphArray","newData","Object","values","keys","forEach","key","push","name","i","length","color","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAMqBA,E,uKAIb,OAFAC,QAAQC,IAAI,SAAUC,KAAKC,MAAMC,WAG7B,qBAAKC,UAAU,OAAf,SACI,eAAC,IAAD,CACIC,MAAO,KACPC,OAAQ,IACRC,KAAMN,KAAKC,MAAMC,UACjBK,OAAQ,CACJC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GAL7C,UAQI,cAAC,IAAD,CAAeC,gBAAgB,QAC/B,cAAC,IAAD,CAAOC,QAAQ,SACf,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,KAAK,WAAWD,QAAS,EAAGE,OAAO,UAAUC,UAAW,CAAEC,EAAG,KACnE,cAAC,IAAD,CAAMH,KAAK,WAAWD,QAAS,EAAGE,OAAO,YACzC,cAAC,IAAD,CAAMD,KAAK,WAAWD,QAAS,EAAGE,OAAO,YACzC,cAAC,IAAD,CAAMD,KAAK,WAAWD,QAAS,EAAGE,OAAO,qB,GAtBrBG,iB,SCSzBC,MATf,SAAgBlB,GAAQ,IACZmB,EAAcC,yBAAdD,UACAd,EAA2BL,EAA3BK,KAAMgB,EAAqBrB,EAArBqB,OAAQC,EAAatB,EAAbsB,SAEtB,OADAzB,QAAQC,IAAI,oBAAqBO,EAAMgB,EAAQC,GACxC,wBAAQpB,UAAU,6BAA6BqB,QAAS,kBAAMJ,EAAU,CAAEd,OAAMgB,SAAQC,cAAxF,kCCHLD,EAAS,CACb,KAAQ,OACR,EAAK,OACL,EAAK,OACL,EAAK,MACL,EAAK,SAELG,EAAQ,CACNC,QAAS,OA6DEC,E,4MAvDbC,MAAQ,CACNC,WAAW,EACXvB,KAAM,I,kEAGa,IAAD,OAClBwB,MAAM,uFACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CAAEL,WAAW,EAAOvB,KAAM2B,OAEzCE,OAAM,SAACC,GAAD,OAAStC,QAAQC,IAAI,UAAWqC,Q,+BAEjC,IAAD,EACqBpC,KAAK4B,MAAzBC,EADD,EACCA,UAAWvB,EADZ,EACYA,YACZA,EAAK,aACZ,IAAI+B,EAAW,GACXC,EAAa,GACbC,EAAUC,OAAOC,OAAOnC,GAAM,GAClC,GAAIiC,EAAS,CACXC,OAAOE,KAAKH,GAASI,SAAQ,SAAAC,GAAG,OAAIP,EAASQ,KAAT,aAClCC,KAAMF,GACHJ,OAAOC,OAAOF,EAAQK,SAE3B,IAAK,IAAIG,EAAI,EAAGA,EAAIV,EAASW,OAAQD,GAAK,GACxCT,EAAWO,KAAKR,EAASU,IAK7B,OAAIlB,EACK,qBAAKJ,MAAO,CAAEwB,MAAO,SAArB,8BAMP,sBAAK9C,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,mCAGA,cAAC,EAAD,CAAQG,KAAMgC,EACZf,SAzDO,WA0DPD,OAAQA,EACRG,MAAOA,EACPyB,KAjDD,wBAkDD,qBAAK/C,UAAU,gCAAf,SACE,cAAC,EAAD,CAAYD,UAAWoC,a,GAhDfpB,iBChBlBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8ca9298.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\nexport default class ChartGraph extends PureComponent {\n    render() {\n        console.log(\"data->\", this.props.graphData)\n\n        return (\n            <div className=\"mt-4\">\n                <LineChart\n                    width={1200}\n                    height={600}\n                    data={this.props.graphData}\n                    margin={{\n                        top: 5, right: 10, left: 10, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey={0} stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                    <Line type=\"monotone\" dataKey={1} stroke=\"#82ca9d\" />\n                    <Line type=\"monotone\" dataKey={2} stroke=\"#00FFFF\" />\n                    <Line type=\"monotone\" dataKey={3} stroke=\"#F2EA02\" />\n                </LineChart>\n            </div>\n        );\n    }\n}\n","import React from \"react\"\nimport {\n    JsonToCsv,\n    useJsonToCsv\n} from 'react-json-csv';\n\nfunction Report(props) {\n    const { saveAsCsv } = useJsonToCsv();\n    const { data, fields, filename } = props\n    console.log(\"values passed -> \", data, fields, filename)\n    return <button className=\"button-style mt-3 p-2 px-2\" onClick={() => saveAsCsv({ data, fields, filename })}>\n        Create excel report\n</button>\n}\n\nexport default Report\n","import React, { PureComponent, useRef } from \"react\"\nimport './App.css';\nimport ChartGraph from \"./ChartGraph\"\nimport Report from \"./Report\"\n\n\nconst filename = 'Csv-file'\nconst fields = {\n  \"name\": \"Date\",\n  \"0\": \"open\",\n  \"1\": \"high\",\n  \"2\": \"low\",\n  \"3\": \"close\"\n},\n  style = {\n    padding: \"5px\"\n  },\n  text = \"Convert Json to Csv\";\n\n\nclass App extends PureComponent {\n  state = {\n    isloading: true,\n    data: []\n  }\n\n  componentDidMount() {\n    fetch('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=IBM&apikey=demo')\n      .then((resp) => resp.json())\n      .then(json => {\n        this.setState({ isloading: false, data: json })\n      })\n      .catch((err) => console.log(\"error->\", err))\n  }\n  render() {\n    const { isloading, data } = this.state;\n    delete data['Meta Data']\n    let objArray = [];\n    let graphArray = [];\n    let newData = Object.values(data)[0]\n    if (newData) {\n      Object.keys(newData).forEach(key => objArray.push({\n        name: key,\n        ...Object.values(newData[key])\n      }));\n      for (let i = 0; i < objArray.length; i += 14) {\n        graphArray.push(objArray[i])\n      }\n    }\n\n\n    if (isloading) {\n      return <div style={{ color: \"white\" }}>\n        Loading data....\n      </div>\n    }\n\n    return (\n      <div className=\"App\" >\n        <div className=\"App-header\" >\n          Stock Market Timeline\n        </div>\n        <Report data={graphArray}\n          filename={filename}\n          fields={fields}\n          style={style}\n          text={text} />\n        <div className=\"d-flex justify-content-center\">\n          <ChartGraph graphData={graphArray} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}