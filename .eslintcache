[{"/home/riya/stock/src/index.js":"1","/home/riya/stock/src/App.js":"2","/home/riya/stock/src/ChartGraph.js":"3","/home/riya/stock/src/Report.js":"4"},{"size":197,"mtime":1609261360294,"results":"5","hashOfConfig":"6"},{"size":2762,"mtime":1609326623411,"results":"7","hashOfConfig":"6"},{"size":1198,"mtime":1609325690691,"results":"8","hashOfConfig":"6"},{"size":442,"mtime":1609326643023,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1i98ad7",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/home/riya/stock/src/index.js",[],["21","22"],"/home/riya/stock/src/App.js",["23"],"import React, { PureComponent, useRef } from \"react\"\nimport './App.css';\nimport ChartGraph from \"./ChartGraph\"\nimport Report from \"./Report\"\nimport Loader from 'react-loader-spinner'\n\n\n\nconst filename = 'Csv-file'\nconst fields = {\n  \"name\": \"Date\",\n  \"open\": \"Open\",\n  \"high\": \"High\",\n  \"low\": \"Low\",\n  \"close\": \"Close\"\n},\n  style = {\n    padding: \"5px\"\n  },\n  text = \"Convert Json to Csv\";\n\n\nclass App extends PureComponent {\n  state = {\n    isloading: true,\n    data: [],\n    error: false\n  }\n\n  componentDidMount() {\n    fetch('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=IBM&apikey=demo')\n      .then((resp) => resp.json())\n      .then(json => {\n        this.setState({ isloading: false, data: json })\n      })\n      .catch((err) => this.setState({ isloading: false, error: true }))\n  }\n  render() {\n    const { isloading, data } = this.state;\n    delete data['Meta Data']\n    let objArray = [];\n    let graphArray = [];\n    let newData = Object.values(data)[0]\n    if (newData) {\n      Object.keys(newData).forEach(key => objArray.push({\n        name: key,\n        ...Object.values(newData[key])\n      }));\n      for (let i = 0; i < objArray.length; i += 14) {\n        graphArray.push(objArray[i])\n      }\n      for (let i = 0; i < graphArray.length; i++) {\n        graphArray[i].open = graphArray[i]['0'];\n        graphArray[i].high = graphArray[i]['1'];\n        graphArray[i].low = graphArray[i]['2'];\n        graphArray[i].close = graphArray[i]['3'];\n        delete graphArray[i]['0'];\n        delete graphArray[i]['1'];\n        delete graphArray[i]['2'];\n        delete graphArray[i]['3'];\n        delete graphArray[i]['4'];\n      }\n    }\n\n\n\n\n    if (isloading) {\n      return <div className=\" d-flex flex-column justify-content-center\" style={{ color: \"white\" }}>\n        <div className=\"App-header\" >\n          Stock Market Timeline\n        </div>\n        <div className=\"d-flex justify-content-center mt-5\">\n          <Loader\n            type=\"Bars\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        </div>\n      </div>\n    }\n\n    return (\n      <div className=\"App\" >\n        <div className=\"App-header\" >\n          Stock Market Timeline\n        </div>\n        <hr style={{ backgroundColor: 'white' }} />\n\n        {this.state.error ? <div> There was some error fetching data. Please check your internet connection.</div> : <div><Report data={graphArray}\n          filename={filename}\n          fields={fields}\n          style={style}\n          text={text} />\n          <div className=\"d-flex justify-content-center\">\n            <ChartGraph graphData={graphArray} />\n          </div> </div>}\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","/home/riya/stock/src/ChartGraph.js",[],"/home/riya/stock/src/Report.js",["24"],"import React from \"react\"\nimport {\n    JsonToCsv,\n    useJsonToCsv\n} from 'react-json-csv';\n\nfunction Report(props) {\n    const { saveAsCsv } = useJsonToCsv();\n    const { data, fields, filename } = props\n    console.log(\"values passed -> \", data, fields, filename)\n    return <button className=\"button-style mt-2 p-2 px-2\" onClick={() => saveAsCsv({ data, fields, filename })}>\n        Create excel report\n</button>\n}\n\nexport default Report\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":32,"nodeType":"31","messageId":"32","endLine":1,"endColumn":38},{"ruleId":"29","severity":1,"message":"33","line":3,"column":5,"nodeType":"31","messageId":"32","endLine":3,"endColumn":14},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'JsonToCsv' is defined but never used.","no-global-assign","no-unsafe-negation"]